// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nested

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NoDefault struct {
	pulumi.ResourceState

	Value pulumi.StringOutput `pulumi:"value"`
}

// NewNoDefault registers a new resource with the given unique name, arguments, and options.
func NewNoDefault(ctx *pulumi.Context,
	name string, args *NoDefaultArgs, opts ...pulumi.ResourceOption) (*NoDefault, error) {
	if args == nil {
		args = &NoDefaultArgs{}
	}

	var resource NoDefault
	err := ctx.RegisterRemoteComponentResource("nested:index:NoDefault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type noDefaultArgs struct {
	Nested *NestedNoDefault `pulumi:"nested"`
	Value  *string          `pulumi:"value"`
}

// The set of arguments for constructing a NoDefault resource.
type NoDefaultArgs struct {
	Nested NestedNoDefaultPtrInput
	Value  pulumi.StringPtrInput
}

func (NoDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*noDefaultArgs)(nil)).Elem()
}

type NoDefaultInput interface {
	pulumi.Input

	ToNoDefaultOutput() NoDefaultOutput
	ToNoDefaultOutputWithContext(ctx context.Context) NoDefaultOutput
}

func (*NoDefault) ElementType() reflect.Type {
	return reflect.TypeOf((**NoDefault)(nil)).Elem()
}

func (i *NoDefault) ToNoDefaultOutput() NoDefaultOutput {
	return i.ToNoDefaultOutputWithContext(context.Background())
}

func (i *NoDefault) ToNoDefaultOutputWithContext(ctx context.Context) NoDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoDefaultOutput)
}

// NoDefaultArrayInput is an input type that accepts NoDefaultArray and NoDefaultArrayOutput values.
// You can construct a concrete instance of `NoDefaultArrayInput` via:
//
//	NoDefaultArray{ NoDefaultArgs{...} }
type NoDefaultArrayInput interface {
	pulumi.Input

	ToNoDefaultArrayOutput() NoDefaultArrayOutput
	ToNoDefaultArrayOutputWithContext(context.Context) NoDefaultArrayOutput
}

type NoDefaultArray []NoDefaultInput

func (NoDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NoDefault)(nil)).Elem()
}

func (i NoDefaultArray) ToNoDefaultArrayOutput() NoDefaultArrayOutput {
	return i.ToNoDefaultArrayOutputWithContext(context.Background())
}

func (i NoDefaultArray) ToNoDefaultArrayOutputWithContext(ctx context.Context) NoDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoDefaultArrayOutput)
}

// NoDefaultMapInput is an input type that accepts NoDefaultMap and NoDefaultMapOutput values.
// You can construct a concrete instance of `NoDefaultMapInput` via:
//
//	NoDefaultMap{ "key": NoDefaultArgs{...} }
type NoDefaultMapInput interface {
	pulumi.Input

	ToNoDefaultMapOutput() NoDefaultMapOutput
	ToNoDefaultMapOutputWithContext(context.Context) NoDefaultMapOutput
}

type NoDefaultMap map[string]NoDefaultInput

func (NoDefaultMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NoDefault)(nil)).Elem()
}

func (i NoDefaultMap) ToNoDefaultMapOutput() NoDefaultMapOutput {
	return i.ToNoDefaultMapOutputWithContext(context.Background())
}

func (i NoDefaultMap) ToNoDefaultMapOutputWithContext(ctx context.Context) NoDefaultMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoDefaultMapOutput)
}

type NoDefaultOutput struct{ *pulumi.OutputState }

func (NoDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NoDefault)(nil)).Elem()
}

func (o NoDefaultOutput) ToNoDefaultOutput() NoDefaultOutput {
	return o
}

func (o NoDefaultOutput) ToNoDefaultOutputWithContext(ctx context.Context) NoDefaultOutput {
	return o
}

func (o NoDefaultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *NoDefault) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type NoDefaultArrayOutput struct{ *pulumi.OutputState }

func (NoDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NoDefault)(nil)).Elem()
}

func (o NoDefaultArrayOutput) ToNoDefaultArrayOutput() NoDefaultArrayOutput {
	return o
}

func (o NoDefaultArrayOutput) ToNoDefaultArrayOutputWithContext(ctx context.Context) NoDefaultArrayOutput {
	return o
}

func (o NoDefaultArrayOutput) Index(i pulumi.IntInput) NoDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NoDefault {
		return vs[0].([]*NoDefault)[vs[1].(int)]
	}).(NoDefaultOutput)
}

type NoDefaultMapOutput struct{ *pulumi.OutputState }

func (NoDefaultMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NoDefault)(nil)).Elem()
}

func (o NoDefaultMapOutput) ToNoDefaultMapOutput() NoDefaultMapOutput {
	return o
}

func (o NoDefaultMapOutput) ToNoDefaultMapOutputWithContext(ctx context.Context) NoDefaultMapOutput {
	return o
}

func (o NoDefaultMapOutput) MapIndex(k pulumi.StringInput) NoDefaultOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NoDefault {
		return vs[0].(map[string]*NoDefault)[vs[1].(string)]
	}).(NoDefaultOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NoDefaultInput)(nil)).Elem(), &NoDefault{})
	pulumi.RegisterInputType(reflect.TypeOf((*NoDefaultArrayInput)(nil)).Elem(), NoDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NoDefaultMapInput)(nil)).Elem(), NoDefaultMap{})
	pulumi.RegisterOutputType(NoDefaultOutput{})
	pulumi.RegisterOutputType(NoDefaultArrayOutput{})
	pulumi.RegisterOutputType(NoDefaultMapOutput{})
}
