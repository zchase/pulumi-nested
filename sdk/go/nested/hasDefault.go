// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nested

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HasDefault struct {
	pulumi.ResourceState

	Value pulumi.StringOutput `pulumi:"value"`
}

// NewHasDefault registers a new resource with the given unique name, arguments, and options.
func NewHasDefault(ctx *pulumi.Context,
	name string, args *HasDefaultArgs, opts ...pulumi.ResourceOption) (*HasDefault, error) {
	if args == nil {
		args = &HasDefaultArgs{}
	}

	if args.Nested != nil {
		args.Nested = args.Nested.ToNestedHasDefaultPtrOutput().ApplyT(func(v *NestedHasDefault) *NestedHasDefault { return v.Defaults() }).(NestedHasDefaultPtrOutput)
	}
	var resource HasDefault
	err := ctx.RegisterRemoteComponentResource("nested:index:HasDefault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type hasDefaultArgs struct {
	Nested *NestedHasDefault `pulumi:"nested"`
	Value  *string           `pulumi:"value"`
}

// The set of arguments for constructing a HasDefault resource.
type HasDefaultArgs struct {
	Nested NestedHasDefaultPtrInput
	Value  pulumi.StringPtrInput
}

func (HasDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hasDefaultArgs)(nil)).Elem()
}

type HasDefaultInput interface {
	pulumi.Input

	ToHasDefaultOutput() HasDefaultOutput
	ToHasDefaultOutputWithContext(ctx context.Context) HasDefaultOutput
}

func (*HasDefault) ElementType() reflect.Type {
	return reflect.TypeOf((**HasDefault)(nil)).Elem()
}

func (i *HasDefault) ToHasDefaultOutput() HasDefaultOutput {
	return i.ToHasDefaultOutputWithContext(context.Background())
}

func (i *HasDefault) ToHasDefaultOutputWithContext(ctx context.Context) HasDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HasDefaultOutput)
}

// HasDefaultArrayInput is an input type that accepts HasDefaultArray and HasDefaultArrayOutput values.
// You can construct a concrete instance of `HasDefaultArrayInput` via:
//
//	HasDefaultArray{ HasDefaultArgs{...} }
type HasDefaultArrayInput interface {
	pulumi.Input

	ToHasDefaultArrayOutput() HasDefaultArrayOutput
	ToHasDefaultArrayOutputWithContext(context.Context) HasDefaultArrayOutput
}

type HasDefaultArray []HasDefaultInput

func (HasDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HasDefault)(nil)).Elem()
}

func (i HasDefaultArray) ToHasDefaultArrayOutput() HasDefaultArrayOutput {
	return i.ToHasDefaultArrayOutputWithContext(context.Background())
}

func (i HasDefaultArray) ToHasDefaultArrayOutputWithContext(ctx context.Context) HasDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HasDefaultArrayOutput)
}

// HasDefaultMapInput is an input type that accepts HasDefaultMap and HasDefaultMapOutput values.
// You can construct a concrete instance of `HasDefaultMapInput` via:
//
//	HasDefaultMap{ "key": HasDefaultArgs{...} }
type HasDefaultMapInput interface {
	pulumi.Input

	ToHasDefaultMapOutput() HasDefaultMapOutput
	ToHasDefaultMapOutputWithContext(context.Context) HasDefaultMapOutput
}

type HasDefaultMap map[string]HasDefaultInput

func (HasDefaultMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HasDefault)(nil)).Elem()
}

func (i HasDefaultMap) ToHasDefaultMapOutput() HasDefaultMapOutput {
	return i.ToHasDefaultMapOutputWithContext(context.Background())
}

func (i HasDefaultMap) ToHasDefaultMapOutputWithContext(ctx context.Context) HasDefaultMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HasDefaultMapOutput)
}

type HasDefaultOutput struct{ *pulumi.OutputState }

func (HasDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HasDefault)(nil)).Elem()
}

func (o HasDefaultOutput) ToHasDefaultOutput() HasDefaultOutput {
	return o
}

func (o HasDefaultOutput) ToHasDefaultOutputWithContext(ctx context.Context) HasDefaultOutput {
	return o
}

func (o HasDefaultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *HasDefault) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type HasDefaultArrayOutput struct{ *pulumi.OutputState }

func (HasDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HasDefault)(nil)).Elem()
}

func (o HasDefaultArrayOutput) ToHasDefaultArrayOutput() HasDefaultArrayOutput {
	return o
}

func (o HasDefaultArrayOutput) ToHasDefaultArrayOutputWithContext(ctx context.Context) HasDefaultArrayOutput {
	return o
}

func (o HasDefaultArrayOutput) Index(i pulumi.IntInput) HasDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HasDefault {
		return vs[0].([]*HasDefault)[vs[1].(int)]
	}).(HasDefaultOutput)
}

type HasDefaultMapOutput struct{ *pulumi.OutputState }

func (HasDefaultMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HasDefault)(nil)).Elem()
}

func (o HasDefaultMapOutput) ToHasDefaultMapOutput() HasDefaultMapOutput {
	return o
}

func (o HasDefaultMapOutput) ToHasDefaultMapOutputWithContext(ctx context.Context) HasDefaultMapOutput {
	return o
}

func (o HasDefaultMapOutput) MapIndex(k pulumi.StringInput) HasDefaultOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HasDefault {
		return vs[0].(map[string]*HasDefault)[vs[1].(string)]
	}).(HasDefaultOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HasDefaultInput)(nil)).Elem(), &HasDefault{})
	pulumi.RegisterInputType(reflect.TypeOf((*HasDefaultArrayInput)(nil)).Elem(), HasDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HasDefaultMapInput)(nil)).Elem(), HasDefaultMap{})
	pulumi.RegisterOutputType(HasDefaultOutput{})
	pulumi.RegisterOutputType(HasDefaultArrayOutput{})
	pulumi.RegisterOutputType(HasDefaultMapOutput{})
}
